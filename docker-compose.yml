services:
  # PHP/Symfony Backend
  php:
    build:
      context: ./docker/dev/php
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
      - ./docker/dev/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:ro
    stdin_open: true
    tty: true
    depends_on:
      - database
      - redis
      - mercure
    env_file:
      - ./backend/.env.local
    environment:
      - APP_ENV=dev
      - PHP_IDE_CONFIG=serverName=symfony
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Nginx for Symfony
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html:ro
      - ./docker/dev/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - php

  # Next.js Frontend
  nextjs:
    build:
      context: ./docker/dev/nextjs
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "3030:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NEXT_PUBLIC_MERCURE_HUB_URL=http://localhost:9090/.well-known/mercure
      - WATCHPACK_POLLING=true
    depends_on:
      - nginx
      - mercure

  # PostgreSQL Database
  database:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app_password
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "app", "-U", "app"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"

  # Redis for caching and messaging
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Mercure hub for real-time updates
  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Use the same key for both publisher and subscriber
      MERCURE_PUBLISHER_JWT_KEY: '4f516635df2bab465a8df209d131b44650a243418823829bed72957e5c777870'
      MERCURE_SUBSCRIBER_JWT_KEY: '4f516635df2bab465a8df209d131b44650a243418823829bed72957e5c777870'
      # Enable anonymous subscribers (important for browser connections)
      ALLOW_ANONYMOUS: '1'
      # Allow all origins
      CORS_ALLOWED_ORIGINS: '*'
      # More permissive directives for development
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins *
        anonymous
        subscriptions
      # Run in development mode
      MERCURE_DEV: '1'
      # Disable HTTPS for local development
      SERVER_NAME: ':80'
    ports:
      - "9090:80"
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/healthz" ]
      timeout: 5s
      retries: 5
      start_period: 60s

  # Mailpit for email testing
  mailer:
    image: axllent/mailpit
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP server
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

volumes:
  database_data:
  mercure_data:
  mercure_config:
  redis_data: