apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: chat-app
  labels:
    app: chat-app
    component: backend
    tier: application
spec:
  replicas: 2
  selector:
    matchLabels:
      app: chat-app
      component: backend
  template:
    metadata:
      labels:
        app: chat-app
        component: backend
        tier: application
    spec:
      serviceAccountName: backend
      containers:
        - name: php-fpm
          image: ghcr.io/skunac/chat-project--backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
          env:
            - name: APP_ENV
              value: "prod"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: database-url
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: app-secret
            - name: MERCURE_URL
              value: "http://mercure:80/.well-known/mercure"
            - name: MERCURE_PUBLIC_URL
              value: "http://mercure.local.com/.well-known/mercure"
            - name: MERCURE_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: mercure-jwt-secret
            - name: JWT_PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-passphrase
            - name: REDIS_URL
              value: "redis://redis:6379"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "300m"
          readinessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 60
            periodSeconds: 20
          volumeMounts:
            - name: symfony-var
              mountPath: /var/www/html/var
      volumes:
        - name: symfony-var
          emptyDir: {}
